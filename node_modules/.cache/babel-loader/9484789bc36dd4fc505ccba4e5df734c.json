{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\src\\\\PeriodicTable.js\";\nimport React from \"react\";\nimport AtomicElement from \"./ElementRepresentation\";\nimport RangeBox from \"./RangeBox\";\nimport DetailedElement from \"./DetailedElement\";\nimport CategoryLegend from \"./CategoryLegend\";\nimport TemperatureSlider from \"./TemperatureSlider\";\nimport PhaseStateLegend from \"./PhaseStateLegend\";\n\nvar PeriodicTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PeriodicTable, _React$Component);\n\n  function PeriodicTable(props) {\n    _classCallCheck(this, PeriodicTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PeriodicTable).call(this, props));\n  }\n\n  _createClass(PeriodicTable, [{\n    key: \"_getInnerHTML\",\n    value: function _getInnerHTML(z) {\n      var html = [];\n\n      for (var elem in elementData) {\n        html.push(React.createElement(AtomicElement, {\n          elementName: elem,\n          atomicNumber: elementData[elem].atomicNumber,\n          atomicWeight: elementData[elem].atomicWeight,\n          symbol: elementData[elem].symbol,\n          type: elementData[elem].type,\n          link: elementData[elem].wiki,\n          row: elementData[elem].row,\n          column: elementData[elem].column,\n          group: elementData[elem].group,\n          period: elementData[elem].period,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }));\n      }\n\n      this._addGap(html);\n\n      this._addInfoBox(html);\n\n      return html;\n    }\n  }, {\n    key: \"_addGap\",\n    value: function _addGap(html) {\n      var gapStyling = {\n        gridRow: \"9 / 9\",\n        gridColumn: \"4 / 18\",\n        height: \"3.5em\"\n      };\n      html.push(React.createElement(\"div\", {\n        style: gapStyling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"_addInfoBox\",\n    value: function _addInfoBox(html) {\n      var infoStyling = {\n        gridRow: \"13 / 13\",\n        gridColumn: \"1 / 5\"\n      };\n      html.push(React.createElement(\"p\", {\n        style: infoStyling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"For elements with no stable isotopes, the mass number of the isotope with the longest half-life is in brackets.\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"periodicTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this._getInnerHTML(this.props.json), React.createElement(RangeBox, {\n        min: \"57\",\n        max: \"71\",\n        repType: \"lanthanoid\",\n        gridRow: \"7\",\n        gridColumn: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(RangeBox, {\n        min: \"89\",\n        max: \"103\",\n        repType: \"actinoid\",\n        gridRow: \"8\",\n        gridColumn: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"transition-metal-gap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(PhaseStateLegend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(CategoryLegend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"nonmetal-gap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(TemperatureSlider, {\n        json: this.props.json,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"left-corner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(DetailedElement, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return PeriodicTable;\n}(React.Component);\n\nexport default PeriodicTable;","map":{"version":3,"sources":["C:\\Users\\alexh\\Desktop\\periodic-table\\src\\PeriodicTable.js"],"names":["React","AtomicElement","RangeBox","DetailedElement","CategoryLegend","TemperatureSlider","PhaseStateLegend","PeriodicTable","props","z","html","elem","elementData","push","atomicNumber","atomicWeight","symbol","type","wiki","row","column","group","period","_addGap","_addInfoBox","gapStyling","gridRow","gridColumn","height","infoStyling","_getInnerHTML","json","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport AtomicElement from \"./ElementRepresentation\";\r\nimport RangeBox from \"./RangeBox\";\r\nimport DetailedElement from \"./DetailedElement\";\r\nimport CategoryLegend from \"./CategoryLegend\";\r\nimport TemperatureSlider from \"./TemperatureSlider\";\r\nimport PhaseStateLegend from \"./PhaseStateLegend\";\r\n\r\n\r\nclass PeriodicTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    _getInnerHTML(z) {\r\n        let html = [];\r\n\r\n        for (let elem in elementData) {\r\n            html.push(<AtomicElement elementName={elem} atomicNumber={elementData[elem].atomicNumber}\r\n                atomicWeight={elementData[elem].atomicWeight} symbol={elementData[elem].symbol}\r\n                type={elementData[elem].type} link={elementData[elem].wiki}\r\n                row={elementData[elem].row} column={elementData[elem].column}\r\n                group={elementData[elem].group} period={elementData[elem].period} />);\r\n        }\r\n\r\n        this._addGap(html);\r\n        this._addInfoBox(html);\r\n\r\n        return html;\r\n    }\r\n\r\n    _addGap(html) {\r\n        let gapStyling = {\r\n            gridRow: \"9 / 9\",\r\n            gridColumn: \"4 / 18\",\r\n            height: \"3.5em\"\r\n        };\r\n\r\n        html.push(<div style={gapStyling} />);\r\n    }\r\n\r\n    _addInfoBox(html) {\r\n        let infoStyling = {\r\n            gridRow: \"13 / 13\",\r\n            gridColumn: \"1 / 5\"\r\n        };\r\n\r\n        html.push(<p style={infoStyling}>\r\n                    For elements with no stable isotopes, the mass number of the isotope with the longest half-life is in brackets.\r\n                  </p>)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"periodicTable\">\r\n                <div className=\"grid\">\r\n                    {this._getInnerHTML(this.props.json)}\r\n\r\n                    <RangeBox min=\"57\" max=\"71\" repType=\"lanthanoid\" gridRow=\"7\" gridColumn=\"4\" />\r\n                    <RangeBox min=\"89\" max=\"103\" repType=\"actinoid\" gridRow=\"8\" gridColumn=\"4\" />\r\n\r\n                    <div id=\"transition-metal-gap\">\r\n                        <PhaseStateLegend />\r\n                        <CategoryLegend />\r\n                    </div>\r\n\r\n                    <div id=\"nonmetal-gap\">\r\n                        <TemperatureSlider json={this.props.json} />\r\n                    </div>\r\n\r\n                    <div id=\"left-corner\">\r\n                        <DetailedElement />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PeriodicTable\r\n"]},"metadata":{},"sourceType":"module"}