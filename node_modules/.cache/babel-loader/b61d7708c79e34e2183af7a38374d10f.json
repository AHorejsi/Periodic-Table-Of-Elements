{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\src\\\\PeriodicTable.js\";\nimport React from \"react\";\nimport { LessDetailedAtomicElement, MoreDetailedAtomicElement } from \"./ElementRepresentation\";\nimport ElementLegend from \"./ElementLegend\";\nimport { NumberRow, NumberColumn } from \"./NumberPositions\";\n\nvar FILE_SYSTEM = require(\"fs\");\n\nvar PeriodicTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PeriodicTable, _React$Component);\n\n  function PeriodicTable(props) {\n    _classCallCheck(this, PeriodicTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PeriodicTable).call(this, props));\n  }\n\n  _createClass(PeriodicTable, [{\n    key: \"render\",\n    value: function render() {\n      var json;\n      var xmlHttp = new XMLHttpRequest();\n\n      xmlHttp.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n          json = JSON.parse(this.responseText);\n        }\n      };\n\n      xmlHttp.open(\"GET\", \"Elements.json\", true);\n      xmlHttp.send();\n      /*FILE_SYSTEM.readFile(\"./periodic-table/Elements.json\", \"utf-8\" function(error, data) {\r\n      \tif (!error) {\r\n      \t\tthrow error;\r\n      \t}\r\n      \telse {\r\n      \t\tjson = JSON.parse(data);\r\n      \t}\r\n      });*/\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, json.toString());\n    }\n  }]);\n\n  return PeriodicTable;\n}(React.Component);\n\nexport default PeriodicTable;","map":{"version":3,"sources":["C:\\Users\\alexh\\Desktop\\periodic-table\\src\\PeriodicTable.js"],"names":["React","LessDetailedAtomicElement","MoreDetailedAtomicElement","ElementLegend","NumberRow","NumberColumn","FILE_SYSTEM","require","PeriodicTable","props","json","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","open","send","toString","Component"],"mappings":"AAAA;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,yBAAR,EAAmCC,yBAAnC,QAAmE,yBAAnE;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,SAAR,EAAmBC,YAAnB,QAAsC,mBAAtC;;AAGA,IAAMC,WAAW,GAAGC,OAAO,CAAC,IAAD,CAA3B;;IAEMC,a;;;;;AACL,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sFACZA,KADY;AAElB;;;;6BAEQ;AACR,UAAIC,IAAJ;AACA,UAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;;AAEAD,MAAAA,OAAO,CAACE,kBAAR,GAA6B,YAAW;AACvC,YAAI,KAAKC,UAAL,IAAmB,CAAnB,IAAwB,KAAKC,MAAL,IAAe,GAA3C,EAAgD;AAC/CL,UAAAA,IAAI,GAAGM,IAAI,CAACC,KAAL,CAAW,KAAKC,YAAhB,CAAP;AACA;AACD,OAJD;;AAMAP,MAAAA,OAAO,CAACQ,IAAR,CAAa,KAAb,EAAoB,eAApB,EAAqC,IAArC;AACAR,MAAAA,OAAO,CAACS,IAAR;AAEA;;;;;;;;;AASA,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMV,IAAI,CAACW,QAAL,EAAN,CADD;AAGA;;;;EA9B0BrB,KAAK,CAACsB,S;;AAiClC,eAAed,aAAf","sourcesContent":["\"use strict\";\r\n\r\nimport React from \"react\";\r\nimport {LessDetailedAtomicElement, MoreDetailedAtomicElement} from \"./ElementRepresentation\";\r\nimport ElementLegend from \"./ElementLegend\";\r\nimport {NumberRow, NumberColumn} from \"./NumberPositions\";\r\n\r\n\r\nconst FILE_SYSTEM = require(\"fs\");\r\n\r\nclass PeriodicTable extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tlet json;\r\n\t\tlet xmlHttp = new XMLHttpRequest();\r\n\t\t\r\n\t\txmlHttp.onreadystatechange = function() {\r\n\t\t\tif (this.readyState == 4 && this.status == 200) {\r\n\t\t\t\tjson = JSON.parse(this.responseText);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\txmlHttp.open(\"GET\", \"Elements.json\", true);\r\n\t\txmlHttp.send();\r\n\t\t\r\n\t\t/*FILE_SYSTEM.readFile(\"./periodic-table/Elements.json\", \"utf-8\" function(error, data) {\r\n\t\t\tif (!error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tjson = JSON.parse(data);\r\n\t\t\t}\r\n\t\t});*/\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>{json.toString()}</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PeriodicTable\r\n"]},"metadata":{},"sourceType":"module"}