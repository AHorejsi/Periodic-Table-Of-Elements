{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\src\\\\PeriodicTable.js\";\nimport React from \"react\";\n\nvar PeriodicTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PeriodicTable, _React$Component);\n\n  function PeriodicTable(props) {\n    var _this;\n\n    _classCallCheck(this, PeriodicTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PeriodicTable).call(this, props));\n    var xmlHttp = new XMLHttpRequest();\n    var jsonData;\n\n    xmlHttp.onreadystatechange = function () {\n      if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {\n        jsonData = xmlHttp.responseText;\n        alert(jsonData);\n      }\n    };\n\n    xmlHttp.responseType = \"json\";\n    xmlHttp.open(\"GET\", \"./Elements.json\", true);\n    xmlHttp.send();\n    _this.state = {\n      json: jsonData\n    };\n    return _this;\n  }\n\n  _createClass(PeriodicTable, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.state.json);\n    }\n  }]);\n\n  return PeriodicTable;\n}(React.Component);\n\nexport default PeriodicTable;","map":{"version":3,"sources":["C:\\Users\\alexh\\Desktop\\periodic-table\\src\\PeriodicTable.js"],"names":["React","PeriodicTable","props","xmlHttp","XMLHttpRequest","jsonData","onreadystatechange","readyState","status","responseText","alert","responseType","open","send","state","json","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAGMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;AAEA,QAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACA,QAAIC,QAAJ;;AAEAF,IAAAA,OAAO,CAACG,kBAAR,GAA6B,YAAM;AAC/B,UAAIH,OAAO,CAACI,UAAR,KAAuB,CAAvB,IAA4BJ,OAAO,CAACK,MAAR,KAAmB,GAAnD,EAAwD;AACpDH,QAAAA,QAAQ,GAAGF,OAAO,CAACM,YAAnB;AACAC,QAAAA,KAAK,CAACL,QAAD,CAAL;AACH;AACJ,KALD;;AAOAF,IAAAA,OAAO,CAACQ,YAAR,GAAuB,MAAvB;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAa,KAAb,EAAoB,iBAApB,EAAuC,IAAvC;AACAT,IAAAA,OAAO,CAACU,IAAR;AAEA,UAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAEV;AAAP,KAAb;AAjBe;AAkBlB;;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKS,KAAL,CAAWC,IADhB,CADJ;AAKH;;;;EA3BuBf,KAAK,CAACgB,S;;AA8BlC,eAAef,aAAf","sourcesContent":["import React from \"react\";\r\n\r\n\r\nclass PeriodicTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let xmlHttp = new XMLHttpRequest();\r\n        let jsonData;\r\n\r\n        xmlHttp.onreadystatechange = () => {\r\n            if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {\r\n                jsonData = xmlHttp.responseText;\r\n                alert(jsonData);\r\n            }\r\n        };\r\n\r\n        xmlHttp.responseType = \"json\";\r\n        xmlHttp.open(\"GET\", \"./Elements.json\", true);\r\n        xmlHttp.send();\r\n\r\n        this.state = {json: jsonData};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.json}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PeriodicTable\r\n"]},"metadata":{},"sourceType":"module"}