{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\src\\\\PeriodicTable.js\";\nimport React from \"react\";\nimport { LessDetailedAtomicElement, MoreDetailedAtomicElement } from \"./ElementRepresentation\";\nimport ElementLegend from \"./ElementLegend\";\nimport { NumberRow, NumberColumn } from \"./NumberPositions\";\n\nvar PeriodicTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PeriodicTable, _React$Component);\n\n  function PeriodicTable(props) {\n    _classCallCheck(this, PeriodicTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PeriodicTable).call(this, props));\n  }\n\n  _createClass(PeriodicTable, [{\n    key: \"_getJSONData\",\n    value: function _getJSONData() {\n      var json;\n      var xmlHttp = new XMLHttpRequest();\n\n      xmlHttp.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n          json = this.responseText;\n        }\n      };\n\n      xmlHttp.open(\"GET\", \"./periodic-table/Elements.json\", true);\n      xmlHttp.send();\n      return json + \"A\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var json = this._getJSONData();\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, json);\n    }\n  }]);\n\n  return PeriodicTable;\n}(React.Component);\n\nexport default PeriodicTable;","map":{"version":3,"sources":["C:\\Users\\alexh\\Desktop\\periodic-table\\src\\PeriodicTable.js"],"names":["React","LessDetailedAtomicElement","MoreDetailedAtomicElement","ElementLegend","NumberRow","NumberColumn","PeriodicTable","props","json","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","_getJSONData","Component"],"mappings":"AAAA;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,yBAAR,EAAmCC,yBAAnC,QAAmE,yBAAnE;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,SAAR,EAAmBC,YAAnB,QAAsC,mBAAtC;;IAEMC,a;;;;;AACL,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sFACZA,KADY;AAElB;;;;mCAEc;AACd,UAAIC,IAAJ;AACA,UAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;;AAEAD,MAAAA,OAAO,CAACE,kBAAR,GAA6B,YAAW;AACvC,YAAI,KAAKC,UAAL,IAAmB,CAAnB,IAAwB,KAAKC,MAAL,IAAe,GAA3C,EAAgD;AAC/CL,UAAAA,IAAI,GAAG,KAAKM,YAAZ;AACA;AACD,OAJD;;AAMAL,MAAAA,OAAO,CAACM,IAAR,CAAa,KAAb,EAAoB,gCAApB,EAAsD,IAAtD;AACAN,MAAAA,OAAO,CAACO,IAAR;AAEA,aAAOR,IAAI,GAAG,GAAd;AACA;;;6BAEQ;AACR,UAAIA,IAAI,GAAG,KAAKS,YAAL,EAAX;;AAEA,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMT,IAAN,CADD;AAGA;;;;EA3B0BR,KAAK,CAACkB,S;;AA8BlC,eAAeZ,aAAf","sourcesContent":["\"use strict\";\r\n\r\nimport React from \"react\";\r\nimport {LessDetailedAtomicElement, MoreDetailedAtomicElement} from \"./ElementRepresentation\";\r\nimport ElementLegend from \"./ElementLegend\";\r\nimport {NumberRow, NumberColumn} from \"./NumberPositions\";\r\n\r\nclass PeriodicTable extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\t\r\n\t_getJSONData() {\r\n\t\tlet json;\r\n\t\tlet xmlHttp = new XMLHttpRequest();\r\n\t\t\r\n\t\txmlHttp.onreadystatechange = function() {\r\n\t\t\tif (this.readyState == 4 && this.status == 200) {\r\n\t\t\t\tjson = this.responseText;\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\txmlHttp.open(\"GET\", \"./periodic-table/Elements.json\", true);\r\n\t\txmlHttp.send();\r\n\t\t\r\n\t\treturn json + \"A\";\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tlet json = this._getJSONData();\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>{json}</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PeriodicTable\r\n"]},"metadata":{},"sourceType":"module"}