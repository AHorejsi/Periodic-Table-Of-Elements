{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Owner\\\\Desktop\\\\Periodic-Table-of-Elements\\\\Periodic-Table-Of-Elements\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Owner\\\\Desktop\\\\Periodic-Table-of-Elements\\\\Periodic-Table-Of-Elements\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Owner\\\\Desktop\\\\Periodic-Table-of-Elements\\\\Periodic-Table-Of-Elements\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Owner\\\\Desktop\\\\Periodic-Table-of-Elements\\\\Periodic-Table-Of-Elements\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Owner\\\\Desktop\\\\Periodic-Table-of-Elements\\\\Periodic-Table-Of-Elements\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\Periodic-Table-of-Elements\\\\Periodic-Table-Of-Elements\\\\src\\\\TemperatureSlider.js\";\nimport React from \"react\";\nimport $ from \"jquery\";\nimport { elementData } from \"./JSONRetriever\";\nimport { computePhaseState } from \"./ChemCalc\";\n\nvar TemperatureSlider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TemperatureSlider, _React$Component);\n\n  function TemperatureSlider(props) {\n    _classCallCheck(this, TemperatureSlider);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TemperatureSlider).call(this, props));\n  }\n\n  _createClass(TemperatureSlider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      $(\"#temperatureSlider\").val(293.15);\n\n      this._updateAtomicElementStatesFromSlider();\n    }\n  }, {\n    key: \"_updateAtomicElementStatesFromSlider\",\n    value: function _updateAtomicElementStatesFromSlider() {\n      var temperature = $(\"#temperatureSlider\").val();\n      $(\"#temperatureInput\").val(temperature);\n\n      this._editStates(temperature);\n    }\n  }, {\n    key: \"_updateAtomicElementStatesFromTextBox\",\n    value: function _updateAtomicElementStatesFromTextBox() {\n      var temperature = $(\"#temperatureInput\").val();\n      $(\"#temperatureSlider\").val(temperature);\n\n      this._editStates(temperature);\n    }\n  }, {\n    key: \"_editStates\",\n    value: function _editStates(temperature) {\n      $.each(elementData, function (element, properties) {\n        var elemDiv = $(\"#\" + element);\n        var phaseState = computePhaseState(properties, temperature);\n\n        if (!elemDiv.hasClass(phaseState)) {\n          elemDiv.removeClass(\"gas liquid solid unknown\");\n          elemDiv.addClass(phaseState);\n        }\n      });\n\n      for (var elem in elementData) {\n        var elemDiv = $(\"#\" + elem);\n        var phaseState = computePhaseState(elementData[elem], temperature);\n\n        if (!elemDiv.hasClass(phaseState)) {\n          elemDiv.removeClass(\"gas liquid solid unknown\");\n          elemDiv.addClass(phaseState);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        id: \"temperatureDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sliderSpan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"temperatureSlider\",\n        className: \"slider floatLeft\",\n        type: \"range\",\n        min: \"0\",\n        max: \"6000\",\n        step: \"0.01\",\n        onChange: function onChange(event) {\n          return _this._updateAtomicElementStatesFromSlider();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"temperatureInput\",\n        className: \"sliderTextbox centered floatRight\",\n        type: \"text\",\n        minLength: \"1\",\n        maxLength: \"7\",\n        onKeyUp: function onKeyUp(event) {\n          return _this._updateAtomicElementStatesFromTextBox();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TemperatureSlider;\n}(React.Component);\n\nexport default TemperatureSlider;","map":{"version":3,"sources":["C:\\Users\\Owner\\Desktop\\Periodic-Table-of-Elements\\Periodic-Table-Of-Elements\\src\\TemperatureSlider.js"],"names":["React","$","elementData","computePhaseState","TemperatureSlider","props","val","_updateAtomicElementStatesFromSlider","temperature","_editStates","each","element","properties","elemDiv","phaseState","hasClass","removeClass","addClass","elem","event","_updateAtomicElementStatesFromTextBox","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport $ from \"jquery\";\r\nimport { elementData } from \"./JSONRetriever\";\r\nimport { computePhaseState } from \"./ChemCalc\";\r\n\r\n\r\nclass TemperatureSlider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(\"#temperatureSlider\").val(293.15);\r\n        this._updateAtomicElementStatesFromSlider();\r\n    }\r\n\r\n    _updateAtomicElementStatesFromSlider() {\r\n        let temperature = $(\"#temperatureSlider\").val();\r\n        $(\"#temperatureInput\").val(temperature);\r\n\r\n        this._editStates(temperature);\r\n    }\r\n\r\n    _updateAtomicElementStatesFromTextBox() {\r\n        let temperature = $(\"#temperatureInput\").val();\r\n        $(\"#temperatureSlider\").val(temperature);\r\n\r\n        this._editStates(temperature);\r\n    }\r\n\t\r\n    _editStates(temperature) {\r\n        $.each(elementData, function(element, properties) {\r\n            let elemDiv = $(\"#\" + element);\r\n            let phaseState = computePhaseState(properties, temperature);\r\n\r\n            if (!elemDiv.hasClass(phaseState)) {\r\n                elemDiv.removeClass(\"gas liquid solid unknown\");\r\n                elemDiv.addClass(phaseState);\r\n            }\r\n        });\r\n        for (let elem in elementData) {\r\n            let elemDiv = $(\"#\" + elem);\r\n            let phaseState = computePhaseState(elementData[elem], temperature);\r\n\r\n            if (!elemDiv.hasClass(phaseState)) {\r\n                elemDiv.removeClass(\"gas liquid solid unknown\");\r\n                elemDiv.addClass(phaseState);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"temperatureDiv\">\r\n                <span className=\"sliderSpan\">\r\n                    <input id=\"temperatureSlider\" className=\"slider floatLeft\" type=\"range\" min=\"0\" max=\"6000\" step=\"0.01\"\r\n                           onChange={(event) => this._updateAtomicElementStatesFromSlider()} />\r\n                </span>\r\n                    \r\n                <span>\r\n                    <input id=\"temperatureInput\" className=\"sliderTextbox centered floatRight\" type=\"text\" minLength=\"1\" maxLength=\"7\"\r\n                           onKeyUp={(event) => this._updateAtomicElementStatesFromTextBox()} />\r\n                </span>\r\n            </div>\r\n        );        \r\n    }\r\n}\r\n\r\n\r\nexport default TemperatureSlider\r\n"]},"metadata":{},"sourceType":"module"}