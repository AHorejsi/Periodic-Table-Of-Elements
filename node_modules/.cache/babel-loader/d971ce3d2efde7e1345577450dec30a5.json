{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\src\\\\PeriodicTable.js\";\nimport React from \"react\";\nimport AtomicElement from \"./ElementRepresentation\";\n\nvar json = require(\"./ElementJSON\");\n\nvar PeriodicTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PeriodicTable, _React$Component);\n\n  function PeriodicTable(props) {\n    _classCallCheck(this, PeriodicTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PeriodicTable).call(this, props));\n  }\n\n  _createClass(PeriodicTable, [{\n    key: \"render\",\n    value: function render() {\n      /*let html = []\r\n      let elementData = json.elementJSON.data;\r\n        for (let elem in elementData) {\r\n          html.push(<AtomicElement elementName={elem} atomicNumber={elementData[elem].atomicNumber}\r\n                                   atomicWeight={elementData[elem].atomicWeight} symbol={elementData[elem].symbol}\r\n                                   type={elementData[elem].type} row={elementData[elem].row} column={elementData[elem].column} />);\r\n      }*/\n      return React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return PeriodicTable;\n}(React.Component);\n\nexport default PeriodicTable;","map":{"version":3,"sources":["C:\\Users\\alexh\\Desktop\\periodic-table\\src\\PeriodicTable.js"],"names":["React","AtomicElement","json","require","PeriodicTable","props","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;;AAGA,IAAIC,IAAI,GAAGC,OAAO,CAAC,eAAD,CAAlB;;IAEMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sFACTA,KADS;AAElB;;;;6BAEQ;AACL;;;;;;;AASA,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKH;;;;EApBuBL,KAAK,CAACM,S;;AAuBlC,eAAeF,aAAf","sourcesContent":["import React from \"react\";\r\nimport AtomicElement from \"./ElementRepresentation\";\r\n\r\n\r\nvar json = require(\"./ElementJSON\");\r\n\r\nclass PeriodicTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        /*let html = []\r\n        let elementData = json.elementJSON.data;\r\n\r\n        for (let elem in elementData) {\r\n            html.push(<AtomicElement elementName={elem} atomicNumber={elementData[elem].atomicNumber}\r\n                                     atomicWeight={elementData[elem].atomicWeight} symbol={elementData[elem].symbol}\r\n                                     type={elementData[elem].type} row={elementData[elem].row} column={elementData[elem].column} />);\r\n        }*/\r\n\r\n        return (\r\n            <div className=\"grid\">\r\n                {/*html*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PeriodicTable\r\n"]},"metadata":{},"sourceType":"module"}