{"ast":null,"code":"var kelvinToCelsius = function kelvinToCelsius(temperatureInKelvin) {\n  return temperatureInKelvin - 273.15;\n};\n\nvar kelvinToFahrenheit = function kelvinToFahrenheit(temperatureInKelvin) {\n  return temperatureInKelvin * (9 / 5) - 459.67;\n};\n/*function computePhaseState(element, temperature) {\r\n    if (element.boilingPoint !== \"unknown\") {\r\n        if (element.boilingPoint < temperature) {\r\n            return \"gas\";\r\n        }\r\n    }\r\n\r\n    if (element.meltingPoint !== \"unknown\") {\r\n        if (element.meltingPoint > temperature) {\r\n            return \"solid\";\r\n        }\r\n        else if (element.boilingPoint !== \"unknown\") {\r\n            return \"liquid\";\r\n        }\r\n    }\r\n\r\n    return \"unknown\";\r\n}*/\n\n\nfunction computePhaseState(element, temperature, pressure) {}\n\nexport { computePhaseState, kelvinToCelsius, kelvinToFahrenheit };","map":{"version":3,"sources":["C:\\Users\\Owner\\Desktop\\Periodic-Table-of-Elements\\Periodic-Table-Of-Elements\\src\\ChemCalc.js"],"names":["kelvinToCelsius","temperatureInKelvin","kelvinToFahrenheit","computePhaseState","element","temperature","pressure"],"mappings":"AAAA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,mBAAD;AAAA,SAAyBA,mBAAmB,GAAG,MAA/C;AAAA,CAAxB;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACD,mBAAD;AAAA,SAAyBA,mBAAmB,IAAI,IAAI,CAAR,CAAnB,GAAgC,MAAzD;AAAA,CAA3B;AAGA;;;;;;;;;;;;;;;;;;;;AAmBA,SAASE,iBAAT,CAA2BC,OAA3B,EAAoCC,WAApC,EAAiDC,QAAjD,EAA2D,CAE1D;;AAGD,SAASH,iBAAT,EAA4BH,eAA5B,EAA6CE,kBAA7C","sourcesContent":["const kelvinToCelsius = (temperatureInKelvin) => temperatureInKelvin - 273.15;\r\nconst kelvinToFahrenheit = (temperatureInKelvin) => temperatureInKelvin * (9 / 5) - 459.67;\r\n\r\n\r\n/*function computePhaseState(element, temperature) {\r\n    if (element.boilingPoint !== \"unknown\") {\r\n        if (element.boilingPoint < temperature) {\r\n            return \"gas\";\r\n        }\r\n    }\r\n\r\n    if (element.meltingPoint !== \"unknown\") {\r\n        if (element.meltingPoint > temperature) {\r\n            return \"solid\";\r\n        }\r\n        else if (element.boilingPoint !== \"unknown\") {\r\n            return \"liquid\";\r\n        }\r\n    }\r\n\r\n    return \"unknown\";\r\n}*/\r\n\r\nfunction computePhaseState(element, temperature, pressure) {\r\n\r\n}\r\n\r\n\r\nexport { computePhaseState, kelvinToCelsius, kelvinToFahrenheit }\r\n"]},"metadata":{},"sourceType":"module"}