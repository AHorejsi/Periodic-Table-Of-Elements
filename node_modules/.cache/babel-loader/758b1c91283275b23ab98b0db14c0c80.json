{"ast":null,"code":"/*import $ from \"jquery\";\r\n\r\n\r\nvar elementData;\r\nvar measurementData;\r\n\r\n$.ajax({\r\n    url: \"./ElementData.json\",\r\n    async: false,\r\n    dataType: \"json\",\r\n    success: (response) => elementData = response\r\n});\r\n$.ajax({\r\n    url: \"./MeasurementUnits.json\",\r\n    async: false,\r\n    dataType: \"json\",\r\n    success: (response) => measurementData = response\r\n});\r\n\r\n\r\nexport { elementData, measurementData }*/\nimport { Promise } from \"q\";\n\nfunction getJsonData(fileName) {\n  return new Promise(function (resolve, reject) {\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", fileName);\n\n    request.onload = function () {\n      if (request.status === 200) {\n        resolve(request.response);\n      } else {\n        reject(Error(request.statusText));\n      }\n    };\n\n    request.onerror = function () {\n      return reject(Error(\"Network Error\"));\n    };\n\n    request.send();\n  });\n}\n\nexport default getJsonData;","map":{"version":3,"sources":["C:\\Users\\Owner\\Desktop\\Periodic-Table-of-Elements\\Periodic-Table-Of-Elements\\src\\JSONRetriever.js"],"names":["Promise","getJsonData","fileName","resolve","reject","request","XMLHttpRequest","open","onload","status","response","Error","statusText","onerror","send"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAsBA,SAASA,OAAT,QAAwB,GAAxB;;AAIA,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC3B,SAAO,IAAIF,OAAJ,CAAY,UAASG,OAAT,EAAkBC,MAAlB,EAA0B;AACzC,QAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBL,QAApB;;AAEAG,IAAAA,OAAO,CAACG,MAAR,GAAiB,YAAW;AACxB,UAAIH,OAAO,CAACI,MAAR,KAAmB,GAAvB,EAA4B;AACxBN,QAAAA,OAAO,CAACE,OAAO,CAACK,QAAT,CAAP;AACH,OAFD,MAGK;AACDN,QAAAA,MAAM,CAACO,KAAK,CAACN,OAAO,CAACO,UAAT,CAAN,CAAN;AACH;AACJ,KAPD;;AASAP,IAAAA,OAAO,CAACQ,OAAR,GAAkB;AAAA,aAAMT,MAAM,CAACO,KAAK,CAAC,eAAD,CAAN,CAAZ;AAAA,KAAlB;;AAEAN,IAAAA,OAAO,CAACS,IAAR;AACH,GAhBM,CAAP;AAiBH;;AAED,eAAeb,WAAf","sourcesContent":["/*import $ from \"jquery\";\r\n\r\n\r\nvar elementData;\r\nvar measurementData;\r\n\r\n$.ajax({\r\n    url: \"./ElementData.json\",\r\n    async: false,\r\n    dataType: \"json\",\r\n    success: (response) => elementData = response\r\n});\r\n$.ajax({\r\n    url: \"./MeasurementUnits.json\",\r\n    async: false,\r\n    dataType: \"json\",\r\n    success: (response) => measurementData = response\r\n});\r\n\r\n\r\nexport { elementData, measurementData }*/\r\n\r\nimport { Promise } from \"q\";\r\n\r\n\r\n\r\nfunction getJsonData(fileName) {\r\n    return new Promise(function(resolve, reject) {\r\n        let request = new XMLHttpRequest();\r\n        request.open(\"GET\", fileName);\r\n\r\n        request.onload = function() {\r\n            if (request.status === 200) {\r\n                resolve(request.response);\r\n            }\r\n            else {\r\n                reject(Error(request.statusText));\r\n            }\r\n        };\r\n\r\n        request.onerror = () => reject(Error(\"Network Error\"));\r\n\r\n        request.send();\r\n    });\r\n}\r\n\r\nexport default getJsonData\r\n"]},"metadata":{},"sourceType":"module"}