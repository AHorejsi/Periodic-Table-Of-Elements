{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\src\\\\Sliders.js\";\nimport React from \"react\";\n\nvar Slider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Slider, _React$Component);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Slider).call(this, props));\n    _this.state = {\n      value: 0\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var currentValue = event.target.value;\n\n      if (isNaN(currentValue)) {\n        currentValue = this.editOutAlphabetChars(currentValue);\n      } else if (Number(currentValue) > this.props.maximum) {\n        currentValue = this.props.maximum;\n      }\n\n      this.setState({\n        value: currentValue\n      });\n    }\n  }, {\n    key: \"editOutAlphabetChars\",\n    value: function editOutAlphabetChars(currentValue) {\n      var editedValue = \"\";\n\n      for (var index = 0; index < currentValue.length; index++) {\n        var character = currentValue.charAt(index);\n\n        if (character.match(\"[1-9]\")) {\n          editedValue += character;\n        }\n      }\n\n      return editedValue;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: this.props.id + \"Slider\",\n        className: \"generalSlider\",\n        type: \"range\",\n        min: this.props.minimum,\n        max: this.props.maximum,\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: this.props.id + \"Slider\",\n        className: \"centered valueBox\",\n        type: \"text\",\n        maxLength: \"4\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Slider;\n}(React.Component);\n\nvar SliderCollection =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(SliderCollection, _React$Component2);\n\n  function SliderCollection(props) {\n    _classCallCheck(this, SliderCollection);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SliderCollection).call(this, props));\n  }\n\n  _createClass(SliderCollection, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var elementSymbols = document.getElementsByClassName(\"elementSymbol\");\n      var newPhase = this.calculatePhase();\n\n      for (var index = 0; index < elementSymbols.length; index++) {\n        var elem = elementSymbols[index];\n        elem.classList.remove(\"solidColor\");\n        elem.classList.remove(\"liquidColor\");\n        elem.classList.remove(\"gasColor\");\n        elem.classList.remove(\"unknownColor\");\n        elem.classList.add(newPhase);\n      }\n    }\n  }, {\n    key: \"calculatePhase\",\n    value: function calculatePhase() {\n      return \"liquidColor\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"temp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Temperature (Kelvin)\"), React.createElement(Slider, {\n        id: \"temp\",\n        minimum: \"0\",\n        maximum: \"6000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"press\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Pressure (Pascal)\"), React.createElement(Slider, {\n        id: \"press\",\n        minimum: \"0\",\n        maximum: \"6000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SliderCollection;\n}(React.Component);\n\nexport default SliderCollection;","map":{"version":3,"sources":["C:\\Users\\alexh\\Desktop\\periodic-table\\src\\Sliders.js"],"names":["React","Slider","props","state","value","handleChange","bind","event","currentValue","target","isNaN","editOutAlphabetChars","Number","maximum","setState","editedValue","index","length","character","charAt","match","id","minimum","Component","SliderCollection","elementSymbols","document","getElementsByClassName","newPhase","calculatePhase","elem","classList","remove","add"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n\r\nclass Slider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {value: 0};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let currentValue = event.target.value;\r\n\r\n        if (isNaN(currentValue)) {\r\n            currentValue = this.editOutAlphabetChars(currentValue);\r\n        }\r\n        else if (Number(currentValue) > this.props.maximum) {\r\n            currentValue = this.props.maximum;\r\n        } \r\n\r\n        this.setState({value: currentValue});\r\n    }\r\n\r\n    editOutAlphabetChars(currentValue) {\r\n        let editedValue = \"\";\r\n\r\n        for (let index = 0; index < currentValue.length; index++) {\r\n            let character = currentValue.charAt(index);\r\n\r\n            if (character.match(\"[1-9]\")) {\r\n                editedValue += character;\r\n            }\r\n        }\r\n\r\n        return editedValue;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input id={this.props.id + \"Slider\"} className=\"generalSlider\" type=\"range\" min={this.props.minimum} max={this.props.maximum}\r\n                    value={this.state.value} onChange={this.handleChange} />\r\n                <input id={this.props.id + \"Slider\"} className=\"centered valueBox\" type=\"text\" maxLength=\"4\"\r\n                    value={this.state.value} onChange={this.handleChange} /> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SliderCollection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let elementSymbols = document.getElementsByClassName(\"elementSymbol\");\r\n        let newPhase = this.calculatePhase();\r\n\r\n        for (let index = 0; index < elementSymbols.length; index++) {\r\n            let elem = elementSymbols[index];\r\n\r\n            elem.classList.remove(\"solidColor\");\r\n            elem.classList.remove(\"liquidColor\");\r\n            elem.classList.remove(\"gasColor\");\r\n            elem.classList.remove(\"unknownColor\");\r\n\r\n            elem.classList.add(newPhase);\r\n        }\r\n    }\r\n\r\n    calculatePhase() {\r\n        return \"liquidColor\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onChange={this.handleChange}>\r\n                <label htmlFor=\"temp\">Temperature (Kelvin)</label>\r\n                <Slider id=\"temp\" minimum=\"0\" maximum=\"6000\" />\r\n\r\n                <label htmlFor=\"press\">Pressure (Pascal)</label>\r\n                <Slider id=\"press\" minimum=\"0\" maximum=\"6000\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SliderCollection\r\n"]},"metadata":{},"sourceType":"module"}