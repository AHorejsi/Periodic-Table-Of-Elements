{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexh\\\\Desktop\\\\periodic-table\\\\src\\\\PeriodicTable.js\";\nimport React from \"react\";\n\nvar PeriodicTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PeriodicTable, _React$Component);\n\n  function PeriodicTable(props) {\n    var _this;\n\n    _classCallCheck(this, PeriodicTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PeriodicTable).call(this, props));\n    var jsonData;\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.responseType = \"json\";\n    xmlHttp.open(\"GET\", \"./Elements.json\", true);\n    xmlHttp.overrideMimeType(\"text/plain\");\n    xmlHttp.send();\n\n    xmlHttp.onreadystatechange = function () {\n      if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {\n        jsonData = xmlHttp.responseText;\n      }\n    };\n\n    _this.state = {\n      json: jsonData\n    };\n    return _this;\n  }\n\n  _createClass(PeriodicTable, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Hi\");\n    }\n  }]);\n\n  return PeriodicTable;\n}(React.Component);\n\nexport default PeriodicTable;","map":{"version":3,"sources":["C:\\Users\\alexh\\Desktop\\periodic-table\\src\\PeriodicTable.js"],"names":["React","PeriodicTable","props","jsonData","xmlHttp","XMLHttpRequest","responseType","open","overrideMimeType","send","onreadystatechange","readyState","status","responseText","state","json","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAGMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;AAEA,QAAIC,QAAJ;AACA,QAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AAEAD,IAAAA,OAAO,CAACE,YAAR,GAAuB,MAAvB;AACAF,IAAAA,OAAO,CAACG,IAAR,CAAa,KAAb,EAAoB,iBAApB,EAAuC,IAAvC;AACAH,IAAAA,OAAO,CAACI,gBAAR,CAAyB,YAAzB;AACAJ,IAAAA,OAAO,CAACK,IAAR;;AACAL,IAAAA,OAAO,CAACM,kBAAR,GAA6B,YAAM;AAC/B,UAAIN,OAAO,CAACO,UAAR,KAAuB,CAAvB,IAA4BP,OAAO,CAACQ,MAAR,KAAmB,GAAnD,EAAwD;AACpDT,QAAAA,QAAQ,GAAGC,OAAO,CAACS,YAAnB;AACH;AACJ,KAJD;;AAMA,UAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAEZ;AAAP,KAAb;AAhBe;AAiBlB;;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;;;EA1BuBH,KAAK,CAACgB,S;;AA6BlC,eAAef,aAAf","sourcesContent":["import React from \"react\";\r\n\r\n\r\nclass PeriodicTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let jsonData;\r\n        let xmlHttp = new XMLHttpRequest();\r\n\r\n        xmlHttp.responseType = \"json\";\r\n        xmlHttp.open(\"GET\", \"./Elements.json\", true);\r\n        xmlHttp.overrideMimeType(\"text/plain\");\r\n        xmlHttp.send();\r\n        xmlHttp.onreadystatechange = () => {\r\n            if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {\r\n                jsonData = xmlHttp.responseText;\r\n            }\r\n        };\r\n\r\n        this.state = {json: jsonData};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Hi\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PeriodicTable\r\n"]},"metadata":{},"sourceType":"module"}